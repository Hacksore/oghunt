generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Topic {
  id          String      @id
  description String
  name        String
  postId      String?
  posts       TopicPost[]
}

enum EmailSource {
  Form
}

// TODO: at somepoint do we want auth to be able to control this based on a user
model EmailList {
  email  String      @id
  source EmailSource

  dailyEmails Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id           String      @id
  url          String
  createdAt    DateTime    @default(now())
  name         String
  tagline      String
  description  String
  thumbnailUrl String
  /// The images for the post on the CDN
  media        Json        @default("[]")
  votesCount   Int         @default(0)
  hasAi        Boolean     @default(false)
  /// if the post is deleted, it means it was deleted by the user or product hunt team
  deleted      Boolean     @default(false)
  topics       TopicPost[]
}

model TopicPost {
  topicId String
  postId  String
  Topic   Topic  @relation(fields: [topicId], references: [id], onDelete: Cascade)
  Post    Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([topicId, postId])
}

model Metric {
  id                   Int      @id @default(autoincrement())
  timestamp            DateTime @default(dbgenerated("timezone('utc', now())")) @db.Timestamp(6)
  totalProjects        Int
  totalVotes           Int
  aiProjectsPercentage Float
  aiVotesPercentage    Float
}
